{"version":3,"file":"kalendar.js","sources":["../src/constants.js","../src/solar2lunar.js","../src/utils.js","../src/day.js","../src/kalendar.js"],"sourcesContent":["export const animals = ['猴', '鸡', '狗', '猪', '鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊'];\n\nexport const lunarInfo = [\n  0x04bd8, 0x04ae0, 0x0a570, 0x054d5, 0x0d260, 0x0d950, 0x16554, 0x056a0, 0x09ad0, 0x055d2, // 1900-1909\n  0x04ae0, 0x0a5b6, 0x0a4d0, 0x0d250, 0x1d255, 0x0b540, 0x0d6a0, 0x0ada2, 0x095b0, 0x14977, // 1910-1919\n  0x04970, 0x0a4b0, 0x0b4b5, 0x06a50, 0x06d40, 0x1ab54, 0x02b60, 0x09570, 0x052f2, 0x04970, // 1920-1929\n  0x06566, 0x0d4a0, 0x0ea50, 0x06e95, 0x05ad0, 0x02b60, 0x186e3, 0x092e0, 0x1c8d7, 0x0c950, // 1930-1939\n  0x0d4a0, 0x1d8a6, 0x0b550, 0x056a0, 0x1a5b4, 0x025d0, 0x092d0, 0x0d2b2, 0x0a950, 0x0b557, // 1940-1949\n  0x06ca0, 0x0b550, 0x15355, 0x04da0, 0x0a5b0, 0x14573, 0x052b0, 0x0a9a8, 0x0e950, 0x06aa0, // 1950-1959\n  0x0aea6, 0x0ab50, 0x04b60, 0x0aae4, 0x0a570, 0x05260, 0x0f263, 0x0d950, 0x05b57, 0x056a0, // 1960-1969\n  0x096d0, 0x04dd5, 0x04ad0, 0x0a4d0, 0x0d4d4, 0x0d250, 0x0d558, 0x0b540, 0x0b6a0, 0x195a6, // 1970-1979\n  0x095b0, 0x049b0, 0x0a974, 0x0a4b0, 0x0b27a, 0x06a50, 0x06d40, 0x0af46, 0x0ab60, 0x09570, // 1980-1989\n  0x04af5, 0x04970, 0x064b0, 0x074a3, 0x0ea50, 0x06b58, 0x05ac0, 0x0ab60, 0x096d5, 0x092e0, // 1990-1999\n  0x0c960, 0x0d954, 0x0d4a0, 0x0da50, 0x07552, 0x056a0, 0x0abb7, 0x025d0, 0x092d0, 0x0cab5, // 2000-2009\n  0x0a950, 0x0b4a0, 0x0baa4, 0x0ad50, 0x055d9, 0x04ba0, 0x0a5b0, 0x15176, 0x052b0, 0x0a930, // 2010-2019\n  0x07954, 0x06aa0, 0x0ad50, 0x05b52, 0x04b60, 0x0a6e6, 0x0a4e0, 0x0d260, 0x0ea65, 0x0d530, // 2020-2029\n  0x05aa0, 0x076a3, 0x096d0, 0x04afb, 0x04ad0, 0x0a4d0, 0x1d0b6, 0x0d250, 0x0d520, 0x0dd45, // 2030-2039\n  0x0b5a0, 0x056d0, 0x055b2, 0x049b0, 0x0a577, 0x0a4b0, 0x0aa50, 0x1b255, 0x06d20, 0x0ada0, // 2040-2049\n  0x14b63, 0x09370, 0x049f8, 0x04970, 0x064b0, 0x168a6, 0x0ea50, 0x06b20, 0x1a6c4, 0x0aae0, // 2050-2059\n  0x092e0, 0x0d2e3, 0x0c960, 0x0d557, 0x0d4a0, 0x0da50, 0x05d55, 0x056a0, 0x0a6d0, 0x055d4, // 2060-2069\n  0x052d0, 0x0a9b8, 0x0a950, 0x0b4a0, 0x0b6a6, 0x0ad50, 0x055a0, 0x0aba4, 0x0a5b0, 0x052b0, // 2070-2079\n  0x0b273, 0x06930, 0x07337, 0x06aa0, 0x0ad50, 0x14b55, 0x04b60, 0x0a570, 0x054e4, 0x0d160, // 2080-2089\n  0x0e968, 0x0d520, 0x0daa0, 0x16aa6, 0x056d0, 0x04ae0, 0x0a9d4, 0x0a4d0, 0x0d150, 0x0f252, // 2090-2099\n  0x0d520, // 2100\n];\n","import { lunarInfo } from './constants';\n\nclass Solar2lunar {\n  constructor(date) {\n    this.y = date.getFullYear();\n    this.m = date.getMonth();\n    this.d = date.getDate();\n  }\n\n  /**\n   * 返回农历y年闰月是哪个月；若y年没有闰月 则返回0\n   * @param y\n   * @returns {number}\n   */\n  leapMonth(y) {\n    return (lunarInfo[y - 1900] & 0xf);\n  }\n\n  leapDays(y) {\n    if (this.leapMonth(y)) {\n      return ((lunarInfo[y - 1900] & 0x10000) ? 30 : 29);\n    }\n    return (0);\n  }\n\n  lYearDays(y) {\n    let i;\n    let sum = 348;\n    for (i = 0x8000; i > 0x8; i >>= 1) {\n      sum += (lunarInfo[y - 1900] & i) ? 1 : 0;\n    }\n    return (sum + this.leapDays(y));\n  }\n\n  monthDays(y, m) {\n    return ((lunarInfo[y - 1900] & (0x10000 >> m)) ? 30 : 29);\n  }\n\n  convert() {\n    const { y, m, d } = this;\n    if (y < 1900 || y > 2100 || (y === 1900 && !m && d < 31)) return {};\n\n    let i;\n    let temp = 0;\n    let offset = (Date.UTC(y, m, d) - Date.UTC(1900, 0, 31)) / 86400000;\n    for (i = 1900; i < 2101 && offset > 0; i++) {\n      temp = this.lYearDays(i);\n      offset -= temp;\n    }\n    if (offset < 0) {\n      offset += temp;\n      i -= 1;\n    }\n\n    const year = i; // 农历年\n    const leap = this.leapMonth(i); // 闰哪个月\n\n    let isLeap = false;\n    for (i = 1; i < 13 && offset > 0; i++) {\n      if (leap > 0 && i === (leap + 1) && !isLeap) { // 闰月\n        i -= 1;\n        isLeap = true;\n        temp = this.leapDays(year); // 计算农历闰月天数\n      } else {\n        temp = this.monthDays(year, i);// 计算农历普通月天数\n      }\n      isLeap = !(isLeap && i === (leap + 1)); // 解除闰月\n      offset -= temp;\n    }\n\n    if (!offset && leap > 0 && i === leap + 1) {\n      isLeap = !isLeap;\n      if (isLeap) i -= 1;\n    }\n    if (offset < 0) {\n      offset += temp;\n      i -= 1;\n    }\n    const month = i; // 农历月\n    const day = offset + 1; // 农历日\n\n    return { year, leap, month, day };\n  }\n}\n\nexport default Solar2lunar;\n","import { animals } from './constants';\nimport Solar2lunar from './solar2lunar';\n\nexport const getChinaStandard = (date, streamline) => {\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  month = `${month < 10 ? '0' : ''}${month}`;\n  day = `${day < 10 ? '0' : ''}${day}`;\n  const arr = streamline ? [date.getFullYear(), month] : [date.getFullYear(), month, day];\n  return arr.join('-');\n};\n\nexport const getMonthDays = (date) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const leapYear = !(year % 4) && ((year % 100) || !(year % 400));\n  const days = [31, leapYear ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  return days[month];\n};\n\nexport const getDate = (dateStr) => {\n  const date = new Date();\n  const [year, month] = dateStr.split('-');\n  date.setFullYear(+year);\n  date.setMonth(month - 1, 1);\n  return date;\n};\n\nexport const eraseTime = (timeStamp) => {\n  const date = new Date(timeStamp);\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  return date.getTime();\n};\n\nexport const calcMonth = date => date.getFullYear() * 12 + date.getMonth() + 1;\n\nexport const getAnimal = date => animals[date.getFullYear() % 12];\n\nexport const lunar = date => new Solar2lunar(date).convert();\n","import * as utils from './utils';\n\nclass Day {\n  constructor(date, extension = {}) {\n    const toDay = utils.eraseTime(new Date().getTime());\n    const timestamp = utils.eraseTime(date.getTime());\n    const dateText = utils.getChinaStandard(date);\n    const assignment = {\n      year: date.getFullYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      past: toDay > timestamp,\n      today: toDay === utils.eraseTime(timestamp),\n      animal: utils.getAnimal(date),\n      lunar: utils.lunar(date),\n      dateText,\n      timestamp,\n      ...extension,\n    };\n    Object.keys(assignment).forEach(key => this.set(key, assignment[key]));\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n}\n\nexport default Day;\n","import Day from './day';\nimport * as utils from './utils';\n\nclass Kalendar {\n  constructor({ start, end, unifiedMount = {}, mount = {}, weekStart = 0 } = {}) {\n    this.startTime = start;\n    this.endTime = end;\n    this.unifiedMount = unifiedMount;\n    this.mount = mount;\n    this.weekStart = weekStart;\n    return this._create();\n  }\n\n  get startDate() {\n    const date = this.startTime ? utils.getDate(this.startTime) : new Date();\n    date.setDate(1);\n    return date;\n  }\n\n  get endDate() {\n    if (this.endTime) return utils.getDate(this.endTime);\n    const date = this.startDate;\n    date.setMonth(date.getMonth() + 3);\n    return date;\n  }\n\n  _create() {\n    const { startDate, endDate } = this;\n    const table = {};\n    const count = utils.calcMonth(endDate) - utils.calcMonth(startDate);\n    const startTime = utils.eraseTime(startDate.getTime());\n    if (count < 0) return null;\n    let idx = 0;\n    do {\n      const date = new Date(startTime);\n      date.setMonth(date.getMonth() + idx);\n      table[utils.getChinaStandard(date, true)] = Kalendar.monthly({ date, ...this });\n      idx += 1;\n    } while (count > idx);\n    return table;\n  }\n\n  static monthly({ date, mount = {}, unifiedMount = {}, weekStart = 0, continuous }) {\n    date.setDate(1);\n    const monthTable = [];\n    const days = utils.getMonthDays(date);\n    const day = date.getDay();\n    let skip = 0;\n    if (day !== weekStart) skip = (day || 7) - weekStart;\n    for (let i = 0; i < days + skip; i += 7) {\n      const week = [];\n      let num = 7;\n      if (!i && skip) {\n        for (let k = 0; k < skip; k++) {\n          if (continuous) {\n            const agoneDate = new Date(date.valueOf());\n            agoneDate.setDate(agoneDate.getDate() - skip + k);\n            const previousDateText = utils.getChinaStandard(agoneDate);\n            week.push(new Day(agoneDate, Object.assign({}, unifiedMount, mount[previousDateText])));\n          } else {\n            week.push(null);\n          }\n        }\n        num -= skip;\n      }\n      for (let j = 0; j < num; j++) {\n        const dateText = utils.getChinaStandard(date);\n        week.push(new Day(date, Object.assign({}, unifiedMount, mount[dateText])));\n        if (date.getDate() >= days) break;\n        date.setDate(date.getDate() + 1);\n      }\n      const futureDate = new Date(date.valueOf());\n      while (week.length < num) {\n        if (continuous) {\n          futureDate.setDate(futureDate.getDate() + 1);\n          const dateText = utils.getChinaStandard(futureDate);\n          week.push(new Day(futureDate, Object.assign({}, unifiedMount, mount[dateText])));\n        } else {\n          week.push(null);\n        }\n      }\n      monthTable.push(week);\n    }\n    return monthTable;\n  }\n}\n\nexport default Kalendar;\n"],"names":["animals","lunarInfo","Solar2lunar","date","y","getFullYear","m","getMonth","d","getDate","this","leapMonth","i","sum","leapDays","temp","offset","Date","UTC","lYearDays","year","leap","isLeap","monthDays","month","day","getChinaStandard","streamline","join","dateStr","split","setFullYear","setMonth","eraseTime","timeStamp","setHours","setMinutes","setSeconds","setMilliseconds","getTime","calcMonth","Day","extension","toDay","utils","timestamp","dateText","assignment","getDay","past","today","animal","lunar","convert","Object","keys","forEach","key","_this","set","val","start","end","unifiedMount","mount","weekStart","startTime","endTime","_create","startDate","endDate","table","count","idx","Kalendar","monthly","setDate","continuous","monthTable","days","skip","week","num","k","agoneDate","valueOf","previousDateText","push","assign","j","futureDate","length"],"mappings":"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"}