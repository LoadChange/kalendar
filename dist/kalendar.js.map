{"version":3,"file":"kalendar.js","sources":["../src/utils.js","../src/day.js","../src/kalendar.js"],"sourcesContent":["export const getChinaStandard = (date, streamline) => {\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  month = `${month < 10 ? '0' : ''}${month}`;\n  day = `${day < 10 ? '0' : ''}${day}`;\n  const arr = streamline ? [date.getFullYear(), month] : [date.getFullYear(), month, day];\n  return arr.join('-');\n};\n\nexport const getMonthDays = (date) => {\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const leapYear = !(year % 4) && ((year % 100) || !(year % 400));\n  const days = [31, leapYear ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n  return days[month];\n};\n\nexport const getDate = (dateStr) => {\n  const date = new Date();\n  const [year, month] = dateStr.split('-');\n  date.setFullYear(+year);\n  date.setMonth(month - 1, 1);\n  return date;\n};\n\nexport const eraseTime = (timeStamp) => {\n  const date = new Date(timeStamp);\n  date.setHours(0);\n  date.setMinutes(0);\n  date.setSeconds(0);\n  date.setMilliseconds(0);\n  return date.getTime();\n};\n\nexport const calcMonth = date => date.getFullYear() * 12 + date.getMonth() + 1;\n\nconst animals = ['猴', '鸡', '狗', '猪', '鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊'];\n\nexport const getAnimal = date => animals[date.getFullYear() % 12];\n","import * as utils from './utils';\n\nclass Day {\n  constructor(date, extension = {}) {\n    const toDay = utils.eraseTime(new Date().getTime());\n    const timestamp = utils.eraseTime(date.getTime());\n    const dateText = utils.getChinaStandard(date);\n    const assignment = {\n      year: date.getFullYear(),\n      month: date.getMonth(),\n      date: date.getDate(),\n      day: date.getDay(),\n      past: toDay > timestamp,\n      today: toDay === utils.eraseTime(timestamp),\n      animal: utils.getAnimal(date),\n      dateText,\n      timestamp,\n      ...extension,\n    };\n    Object.keys(assignment).forEach(key => this.set(key, assignment[key]));\n  }\n\n  set(key, val) {\n    this[key] = val;\n  }\n}\n\nexport default Day;\n","import Day from './day';\nimport * as utils from './utils';\n\nclass Kalendar {\n  constructor({ start, end, unifiedMount = {}, mount = {}, weekStart = 0 } = {}) {\n    this.startTime = start;\n    this.endTime = end;\n    this.unifiedMount = unifiedMount;\n    this.mount = mount;\n    this.weekStart = weekStart;\n    return this._create();\n  }\n\n  get startDate() {\n    const date = this.startTime ? utils.getDate(this.startTime) : new Date();\n    date.setDate(1);\n    return date;\n  }\n\n  get endDate() {\n    if (this.endTime) return utils.getDate(this.endTime);\n    const date = this.startDate;\n    date.setMonth(date.getMonth() + 3);\n    return date;\n  }\n\n  _create() {\n    const { startDate, endDate } = this;\n    const table = {};\n    const count = utils.calcMonth(endDate) - utils.calcMonth(startDate);\n    const startTime = utils.eraseTime(startDate.getTime());\n    if (count < 0) return null;\n    let idx = 0;\n    do {\n      const date = new Date(startTime);\n      date.setMonth(date.getMonth() + idx);\n      table[utils.getChinaStandard(date, true)] = Kalendar.monthly({ date, ...this });\n      idx += 1;\n    } while (count > idx);\n    return table;\n  }\n\n  static monthly({ date, mount = {}, unifiedMount = {}, weekStart = 0, continuous }) {\n    date.setDate(1);\n    const monthTable = [];\n    const days = utils.getMonthDays(date);\n    const day = date.getDay();\n    let skip = 0;\n    if (day !== weekStart) skip = (day || 7) - weekStart;\n    for (let i = 0; i < days + skip; i += 7) {\n      const week = [];\n      let num = 7;\n      if (!i && skip) {\n        for (let k = 0; k < skip; k++) {\n          if (continuous) {\n            const agoneDate = new Date(date.valueOf());\n            agoneDate.setDate(agoneDate.getDate() - skip + k);\n            const previousDateText = utils.getChinaStandard(agoneDate);\n            week.push(new Day(agoneDate, Object.assign({}, unifiedMount, mount[previousDateText])));\n          } else {\n            week.push(null);\n          }\n        }\n        num -= skip;\n      }\n      for (let j = 0; j < num; j++) {\n        const dateText = utils.getChinaStandard(date);\n        week.push(new Day(date, Object.assign({}, unifiedMount, mount[dateText])));\n        if (date.getDate() >= days) break;\n        date.setDate(date.getDate() + 1);\n      }\n      const futureDate = new Date(date.valueOf());\n      while (week.length < num) {\n        if (continuous) {\n          futureDate.setDate(futureDate.getDate() + 1);\n          const dateText = utils.getChinaStandard(futureDate);\n          week.push(new Day(futureDate, Object.assign({}, unifiedMount, mount[dateText])));\n        } else {\n          week.push(null);\n        }\n      }\n      monthTable.push(week);\n    }\n    return monthTable;\n  }\n}\n\nexport default Kalendar;\n"],"names":["getChinaStandard","date","streamline","month","getMonth","day","getDate","arr","getFullYear","join","getMonthDays","year","leapYear","days","dateStr","Date","split","setFullYear","setMonth","eraseTime","timeStamp","setHours","setMinutes","setSeconds","setMilliseconds","getTime","calcMonth","animals","getAnimal","Day","extension","toDay","utils","timestamp","dateText","assignment","getDay","past","today","animal","Object","keys","forEach","key","set","val","Kalendar","start","end","unifiedMount","mount","weekStart","startTime","endTime","_create","startDate","endDate","table","count","idx","monthly","setDate","continuous","monthTable","skip","i","week","num","k","agoneDate","valueOf","previousDateText","push","assign","j","futureDate","length"],"mappings":"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"}